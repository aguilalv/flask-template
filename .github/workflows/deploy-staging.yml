name: Deploy to Google Cloud Run Staging

on:
  push:
    branches:
      - staging  # Deploy when staging branch is updated

jobs:
  deploy-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          version: 'latest'
      
      - name: Authenticate Docker with GAR
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      # - name: Extract Tag Name
      #   id: get_version
      #   run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ffreedom-docker-repo/ffreedom-expenses:staging .
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ffreedom-docker-repo/ffreedom-expenses:staging

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy ffreedom-expenses-staging \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ffreedom-docker-repo/ffreedom-expenses:staging \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 2 \
            --min-instances 0 \

      # --- Run Behave Tests --- #

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: |
          poetry install --only dev

      - name: Wait for Production Server to Be Ready
        run: |
          curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh ffexp-staging.aalhub.uk:443 --timeout=60 --strict
        shell: bash

      - name: Run Functional Tests Against Staging
        run: |
          poetry run behave --define BASE_URL=https://ffexp-staging.aalhub.uk
